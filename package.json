{
  "name": "@eso-status/service-alerts",
  "version": "2.0.0-dev.0",
  "description": "library for retrieving and formatting data, which can be found at https://help.elderscrollsonline.com/app/answers/detail/a_id/4320",
  "author": "@dov118 <contact@dov118.dev> (https://dov118.dev)",
  "main": "lib/index.js",
  "license": "MIT",
  "engineStrict": true,
  "files": [
    "lib/formatter/date.formatter.d.ts",
    "lib/formatter/date.formatter.js",
    "lib/identifier/slug.identifier.d.ts",
    "lib/identifier/slug.identifier.js",
    "lib/identifier/slugs.identifier.d.ts",
    "lib/identifier/slugs.identifier.js",
    "lib/identifier/status.identifier.d.ts",
    "lib/identifier/status.identifier.js",
    "lib/type/remoteDownRawStatus.type.d.ts",
    "lib/type/remoteDownRawStatus.type.js",
    "lib/type/remoteIssuesRawStatus.type.d.ts",
    "lib/type/remoteIssuesRawStatus.type.js",
    "lib/type/remoteRawSlug.type.d.ts",
    "lib/type/remoteRawSlug.type.js",
    "lib/type/remoteRawStatus.type.d.ts",
    "lib/type/remoteRawStatus.type.js",
    "lib/type/remoteServerPcEuRawSlug.type.d.ts",
    "lib/type/remoteServerPcEuRawSlug.type.js",
    "lib/type/remoteServerPcNaRawSlug.type.d.ts",
    "lib/type/remoteServerPcNaRawSlug.type.js",
    "lib/type/remoteServerPcPtsRawSlug.type.d.ts",
    "lib/type/remoteServerPcPtsRawSlug.type.js",
    "lib/type/remoteServerPsEuRawSlug.type.d.ts",
    "lib/type/remoteServerPsEuRawSlug.type.js",
    "lib/type/remoteServerPsNaRawSlug.type.d.ts",
    "lib/type/remoteServerPsNaRawSlug.type.js",
    "lib/type/remoteServerXboxEuRawSlug.type.d.ts",
    "lib/type/remoteServerXboxEuRawSlug.type.js",
    "lib/type/remoteServerXboxNaRawSlug.type.d.ts",
    "lib/type/remoteServerXboxNaRawSlug.type.js",
    "lib/type/remoteServiceStoreEsoRawSlug.type.d.ts",
    "lib/type/remoteServiceStoreEsoRawSlug.type.js",
    "lib/type/remoteServiceSystemAccountRawSlug.type.d.ts",
    "lib/type/remoteServiceSystemAccountRawSlug.type.js",
    "lib/type/remoteUpRawStatus.type.d.ts",
    "lib/type/remoteUpRawStatus.type.js",
    "lib/connector.d.ts",
    "lib/connector.js",
    "lib/const.d.ts",
    "lib/const.js",
    "lib/index.d.ts",
    "lib/index.js",
    "lib/match.d.ts",
    "lib/match.js",
    "lib/raw.d.ts",
    "lib/raw.js",
    ".npmrc,",
    "LICENSE.md",
    "package.json",
    "README.md"
  ],
  "engines": {
    "node": ">=16.10.0 || >=18.12.0 || >=20.0.0"
  },
  "bugs": {
    "url": "https://github.com/eso-status/service-alerts/issues"
  },
  "homepage": "https://github.com/eso-status/service-alerts#readme",
  "repository": {
    "type": "git",
    "url": "git@github.com:eso-status/service-alerts.git"
  },
  "scripts": {
    "install": "rm -rf .git/hooks/pre-commit && cp pre-commit .git/hooks/ && chmod +x .git/hooks/pre-commit && echo 'hook copied'",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "lint:fix": "eslint \"{src,test}/**/*.ts\" --fix",
    "build": "rm -R -f lib/* && tsc --project tsconfig.build.json",
    "dev": "npm run build && node .",
    "watch": "nodemon --exec npm run dev",
    "test": "npm run build && jest --runInBand --setupFiles",
    "test:watch": "jest --runInBand --watch --setupFiles",
    "test:cov": "jest --runInBand --coverage --setupFiles"
  },
  "dependencies": {
    "@eso-status/types": "1.0.7",
    "axios": "1.7.7",
    "moment": "2.30.1"
  },
  "devDependencies": {
    "@types/jest": "29.5.12",
    "eslint": "8.57.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-airbnb-typescript": "18.0.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-jest": "28.8.2",
    "eslint-plugin-prettier": "5.2.1",
    "eslint-plugin-unused-imports": "4.1.3",
    "jest": "29.7.0",
    "nodemon": "3.1.4",
    "prettier": "3.3.3",
    "ts-jest": "29.2.5",
    "typescript": "5.5.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "./",
    "testRegex": ".*\\.e2e-spec\\.ts|.*\\.spec\\.ts$",
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "setupFiles": [
      "dotenv/config"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "modulePaths": [
      "<rootDir>"
    ]
  }
}
